Jumli-Datei
{
  *** Applikation ***;
  Version=1.3;
  {
    *** Model ***;
    Typ=3;
    MainFile="FirstClass.cs";
    OptionenCompileOne="/debug";
    AufrufCompiler="csc";
    AufrufDebugger="cordbg";
    ActiveDiagramm="Tour 0 Premises";
    {
      *** Package ***;
      Name="UseCases";
      ID=1;
      Zugriff=2;
      Type=2;
      {
        *** Diagramm ***;
        Name="UseCases";
        ID=2;
        DiagrammTyp=2;
      };
    };
    {
      *** Package ***;
      Name="Tour";
      ID=3;
      Zugriff=2;
      {
        *** Klasse ***;
        Doku="\nThis is the first class how we built.\nFollowing details were selected:\n1: \
        the name\n2: the checkbox \"including main";
        Name="FirstClass";
        ID=4;
        Datentyp="class";
        FileName="FirstClass.cs";
        FileActiveLine=-1;
        HeaderFileActiveLine=-1;
        IsMain=true;
        Parent=-1;
        {
          *** Methode ***;
          Name="Main";
          ID=5;
          IsStatic=true;
          Zugriff=3;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Typ="string[]";
            ParameterName="args";
          };
        };
      };
      {
        *** Klasse ***;
        Doku="This is the First-Window-class,  which gets all the characteristics \
        from\n\"Form\". Following informations was made in the dialogue:\n1. The \
        Name\n2. The checkbox \"includes main\" was chosen\n3. The checkbox \"constructor\" \
        was chosen.";
        Name="FirstWindow";
        ID=7;
        Datentyp="class";
        FileName="FirstWindow.cs";
        FileActiveLine=-1;
        HeaderFileActiveLine=-1;
        IsMain=true;
        Parent=-1;
        {
          *** Methode ***;
          Name="FirstWindow";
          ID=59;
        };
        {
          *** Methode ***;
          Name="Main";
          ID=60;
          IsStatic=true;
          Zugriff=3;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Typ="string[]";
            ParameterName="args";
          };
        };
        {
          *** Vererbung ***;
          ID=11;
          A=7;
          B=49;
        };
      };
      {
        *** DotLine ***;
        ID=12;
        Zugriff=2;
        A=31;
        B=4;
      };
      {
        *** DotLine ***;
        ID=13;
        Zugriff=2;
        A=4;
        B=33;
      };
      {
        *** DotLine ***;
        ID=14;
        Zugriff=2;
        A=40;
        B=49;
      };
      {
        *** DotLine ***;
        ID=53;
        Zugriff=2;
        A=4;
        B=31;
      };
      {
        *** Diagramm ***;
        Name="Tour 2 First class";
        ID=15;
        {
          *** NotizZeichner ***;
          Rechteck=26,16,350,97;
          Colour=255,255,0;
          UMLElementID=30;
        };
        {
          *** NotizZeichner ***;
          Rechteck=397,21,744,182;
          UMLElementID=31;
        };
        {
          *** NotizZeichner ***;
          Rechteck=393,209,730,450;
          UMLElementID=32;
        };
        {
          *** NotizZeichner ***;
          Rechteck=16,300,317,381;
          UMLElementID=33;
        };
        {
          *** NotizZeichner ***;
          Rechteck=16,434,361,515;
          UMLElementID=34;
        };
        {
          *** CJumliTracker ***;
          Rechteck=84,173,189,232;
          UMLElementID=4;
          IsWithAttributs=true;
          IsWithMethods=true;
        };
        {
          *** DotLineZeichner ***;
          UMLElementID=53;
          TextOffset=0,5;
        };
      };
      {
        *** Diagramm ***;
        Name="Tour 0 Premises";
        ID=16;
        {
          *** NotizZeichner ***;
          Rechteck=21,49,356,274;
          Colour=255,255,0;
          UMLElementID=21;
        };
        {
          *** NotizZeichner ***;
          Rechteck=416,52,731,213;
          UMLElementID=22;
        };
        {
          *** NotizZeichner ***;
          Rechteck=439,289,749,546;
          UMLElementID=23;
        };
        {
          *** NotizZeichner ***;
          Rechteck=31,358,348,503;
          UMLElementID=24;
        };
      };
      {
        *** Diagramm ***;
        Name="Tour 1 First view";
        ID=17;
        {
          *** NotizZeichner ***;
          Rechteck=40,15,429,192;
          UMLElementID=25;
        };
        {
          *** NotizZeichner ***;
          Rechteck=30,217,405,378;
          Colour=128,255,128;
          UMLElementID=26;
        };
        {
          *** NotizZeichner ***;
          Rechteck=449,33,861,210;
          Colour=0,0,255;
          UMLElementID=27;
        };
        {
          *** NotizZeichner ***;
          Rechteck=495,291,756,452;
          UMLElementID=28;
        };
        {
          *** NotizZeichner ***;
          Rechteck=71,411,361,492;
          UMLElementID=29;
        };
      };
      {
        *** Diagramm ***;
        Name="Tour 3 First program";
        ID=18;
        {
          *** CJumliTracker ***;
          Rechteck=30,162,135,221;
          UMLElementID=4;
          IsWithAttributs=true;
          IsWithMethods=true;
        };
        {
          *** NotizZeichner ***;
          Rechteck=21,30,346,92;
          UMLElementID=35;
        };
        {
          *** NotizZeichner ***;
          Rechteck=371,89,881,211;
          UMLElementID=36;
        };
        {
          *** NotizZeichner ***;
          Rechteck=35,274,369,531;
          UMLElementID=37;
        };
        {
          *** NotizZeichner ***;
          Rechteck=455,271,785,438;
          UMLElementID=38;
        };
      };
      {
        *** Diagramm ***;
        Name="Tour 4 SDK";
        ID=19;
        {
          *** CJumliTracker ***;
          Rechteck=472,72,640,131;
          UMLElementID=49;
        };
        {
          *** NotizZeichner ***;
          Rechteck=51,109,365,426;
          UMLElementID=39;
        };
        {
          *** NotizZeichner ***;
          Rechteck=490,280,806,357;
          UMLElementID=40;
        };
        {
          *** NotizZeichner ***;
          Rechteck=434,480,683,539;
          UMLElementID=41;
        };
        {
          *** DotLineZeichner ***;
          Rechteck=572,194,579,201;
          UMLElementID=14;
          TextOffset=0,5;
        };
      };
      {
        *** Diagramm ***;
        Name="Tour 5 First window";
        ID=20;
        {
          *** CJumliTracker ***;
          Rechteck=148,229,253,293;
          UMLElementID=7;
          IsWithAttributs=true;
          IsWithMethods=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=14,20,182,79;
          UMLElementID=49;
          IsWithAttributs=true;
          IsWithMethods=true;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=145,152,152,159;
          UMLElementID=11;
          TextOffset=0,5;
        };
        {
          *** NotizZeichner ***;
          Rechteck=320,52,705,264;
          UMLElementID=42;
        };
        {
          *** NotizZeichner ***;
          Rechteck=15,372,279,449;
          UMLElementID=43;
        };
        {
          *** NotizZeichner ***;
          Rechteck=413,371,612,568;
          UMLElementID=44;
        };
      };
      {
        *** Notiz ***;
        Doku="Info 1:\n\nA lot of enquiry`s by usern reaches us\nwho get error \
        message by\ncompiling cause of a missing or not founding Microsoft .Net \
        SDK\nImportant is that the SDK is arranged, which is not a component \nof \
        Jumli.\n\nIf there´s anyway an error message in spite of an arrangement \
        \ntry to get of Menue \" Settings/SDK-Options\" putting the register in. \
        \n\nFurther Informations can be find on our Homepage www. jumli.de at\nthe \
        FAQ`s.";
        ID=21;
      };
      {
        *** Notiz ***;
        Doku="Info 2:\n\nJumli shows the help of other systems like for example\nthe \
        SDK-Documentation in a HTML Browser. \nSo you should have to install it. \
        \n\nUnder Linux you have to indicate the Browser and an editor into\nthe \
        Optionsdialogue, \nwhich you can open over Menue \"Settings/Jumli Option.";
        ID=22;
      };
      {
        *** Notiz ***;
        Doku="Info 3:\n\nThere might be problems if\n\n- Jumli  is used by an older \
        Windows 98-Version. But the .Net \n  Framework SDK needs as min. request:\n \
        - NT with SP6a, \n - W2k or \n - Windows XP, so it wouldn´t be a problem \
        at all.\n- The user rights are reduced by the Adminstrator. \n- You will \
        open new project with older Jumli - Versions. \n- Jumli were install on \
        a server-drive and serveral developer \n  are using  at same time.\n- Projects \
        on one server-drive are used by serveral developer \n at same time";
        ID=23;
      };
      {
        *** Notiz ***;
        Doku="Info 4:\n\nIt´s recommendable: \n\n- Install Jumli local \n- Don´t \
        chose the register \"Own files\" as register for Jumli or a\n  project \
        cause the most of compiler have problems with register\n  including spaces \
        or special characters.";
        ID=24;
      };
      {
        *** Notiz ***;
        Doku="Info 1: \n\nOver \"New File\"you can put on a new project. \nIn this \
        case it was an C#-Project. \nImportant is, that you indicated a project \
        register, which has \nno spaces or special characters, because some compiler \
        can´t work \nwith it. \n\nAnyway you should put on a seperate register \
        for your programmed activities, \nso you can programm, cancel and do what \
        ever you want to do.";
        ID=25;
      };
      {
        *** Notiz ***;
        Doku="Info 2:\n\nOn the left is a projecttree. As standard is to put a \
        usecase and a \nproject-package on. Everything you can see here, makes \
        the whole project. \nThe diagram are basically just the view on the model.\n- \
        Into the projecttree you can change with a simple click \n  between the \
        elements. \n- With a double click the necessary  workingdialogue opens.\n- \
        The right mouseclick is for the context-menue.";
        ID=26;
      };
      {
        *** Notiz ***;
        Doku="Info 3: \nHere´s the diagramwindow where you put the UML-model on. \
        \nTherefore different diagrams but always a classdiagram as standard to \
        put on. \n\nDoubleclick on an element opens a dialogue ( like for example \
        in this note)\nwhere you can give the character of the element on. With \
        a simple click you \nwill have a look on the documentation of the element \
        in a messagewindow. \n\nA diagram is always just the half view of a model. \
        The whole overview will you find\nat the projecttree => Info 2.";
        ID=27;
      };
      {
        *** Notiz ***;
        Doku="Info 4:\n\nDown below is the messagewindow. \nHere will be following \
        informations shown:\n- The documentation of a selected model elements\n- \
        Reports of Jumli to the user\n- Compile reports\n- Reports of the programms \
        already are programmed\n- Reports of debuggers";
        ID=28;
      };
      {
        *** Notiz ***;
        Doku="Info 5: \n\nAnd now we will do an C#-program\nLet´s go on at diagram \
        \"Tour 2\" by a click at the projecttree";
        ID=29;
      };
      {
        *** Notiz ***;
        Doku="Info 1:\nAn diagram is created by menue or with the toolbar. In this\ncase \
        we will create a class-diagram because we want to create \na class!";
        ID=30;
      };
      {
        *** Notiz ***;
        Doku="Info 2:\n\nA class will be created by menue or by tollbar. After \
        that you click at \nthe right position in the diagram, where the class \
        will be created.\n\nAt the beginning a dialog is starting where you can \
        choose some\nproperties. In the documentation of this class we have describe \
        which\ndetails are selected.  Click at the class and the documentation \
        will be\nshown at the messageview.";
        ID=31;
      };
      {
        *** Notiz ***;
        Doku="Info 3:\n\nAll elements can be deleted in a diagram. You must varying \
        between\ndelete at the diagram and delete in the model. The diagram view \
        is \nonly a part of the whole model, when you delete a element in a \ndiagram \
        is not deleted in the model. >VERY IMPORTANT<\n\nThe key del. move the \
        element only from the diagram. To delete\nan element from the model, there \
        is only one way. A double click\non the element and than the button Delete\n\nTry\nDelete \
        the class in the diagram by pressing the del.key\nNow you pull the class \
        from the projecttree into the diagram";
        ID=32;
      };
      {
        *** Notiz ***;
        Doku="Info 4:\n\nEvery element has got a contextmenue, it is shown by a \
        click\nby the right mouse key.";
        ID=33;
      };
      {
        *** Notiz ***;
        Doku="Info 5:\n\nNow we start with our first program, it goes on in Tour \
        3 first program\nby a click in the projecttree";
        ID=34;
      };
      {
        *** Notiz ***;
        Doku="Info 1: \nIn this diagram the class would be moved out of the project-tree \
        into\nthe diagram so that is already been seen here.";
        ID=35;
      };
      {
        *** Notiz ***;
        Doku="Info 2: \nWith the toolbar-button \"View change\" it´s possible changing \
        quickly between modeldiagram and the editor\nby fileview. Sometimes Jumli \
        changes the view \nby it self. \n\nTest: \nJust click the button \" View \
        change\".";
        ID=36;
      };
      {
        *** Notiz ***;
        Doku="Info 3: \nNow we´re making a programm: \nTest: \n1: By a click with \
        the right mousebutton to the class and chosing \n    \"sourcecode generating\" \
        you will create a C#-File. \n\n2:Enter in the methode main() the command \
        \n    \"system.console.writeline(\"My first Class! \"); \n\n3: Compile \
        over tollbar by the button \"compile/run/debug\" \n   and the undermenue \
        the file. You must use \"compile\", not \"build\" \n   because we have \
        got two classes and each of them has got \n   \"main incuded\". Now there \
        should be the message \n   by the compiler in the message-window. And there \
        shouldn´t be \n   any mistakes, only if you forgot to install the SDK=>Tour \
        0 or \n   you changed the class by the classdialogue, that wouldn´t be \
        good.";
        ID=37;
      };
      {
        *** Notiz ***;
        Doku="Info 4: \nAfter the file was compiled, you can start the program. \
        \nAt this time our programm isn´t doing anything else instead of sending\nthe \
        message \"Hello\".\nJumli is calling up the \"FirstClass.exe\" and the \
        command-line is \nopening and programm runs up.\n\nTest: \nBy toolbar over \
        the button \"comile/run/debug\" and the childmenue \nstarting the programm \
        by \"run\".";
        ID=38;
      };
      {
        *** Notiz ***;
        Doku="Info 1:\nNow we write a new program, it shows a small window.\nYou \
        should use a C# class of the .Net Framework.\n\nIf all requirements in \
        the diagram \"premises\" are served there is a \nprojecttree in the view \
        \"SDK\".\nWhen you open an old Jumliproject or start a new Jumliproject, \
        \nJumli try to parse the documentation of the workflow.\nIn our case the \
        .Net Framework SDK, and than it is shown in the\nprojecttree.\n\nHere we \
        add the class \"Form\".\n\nTry:\n\n1. change to SDK\n2. after an double \
        click on your favorite class, the IE shows the \n    documentation of your \
        class\n3. try to select a class in the SDK-tree and move it into the \n    \
        diagram";
        ID=39;
      };
      {
        *** Notiz ***;
        Doku="Info 2:\n\nA extern class is shown in another color, you can´t generate \
        some\nsourcecode.";
        ID=40;
      };
      {
        *** Notiz ***;
        Doku="Info 3:\nIt goes on by an click in the projecttree on \"Tour 5\"";
        ID=41;
      };
      {
        *** Notiz ***;
        Doku="Info 1:\n\nThe following was cerated here: \n- \"Form\" was moved \
        out of the projecttree into the diagram.\n- The class\"FirstWindow\" was \
        created with this options: \n-  includes Main\n- Constructor\n- In the \
        toolbar the button \"Inheritance\" was chosen\n- Between the class \"FirstWindow\" \
        and \"Form\" was started by \"FirstWindow\" an\n  inheritance. So \"FirstWindow\" \
        gets all the characteristics from \"Form\".\n\nThe options for \"FirstWindow\"  \
        can be seen again by messagewindow\n(click on class) or by classdialogue \
        (doubleclick).";
        ID=42;
      };
      {
        *** Notiz ***;
        Doku="Info 2:\n\nA right mouse click on our class and than use the item \
        \n\"generate code\" and the source will be generated.";
        ID=43;
      };
      {
        *** Notiz ***;
        Doku="Info 3:\n\nIn the \"main\" you must add this:\n\n   Application.Run( \
        new FirstWindow() );\n\nand in the constructor:\n\n   this.Text = \"Only \
        a window\";\n\nNow you must compile the file, not build. \nAnd than you \
        can execute your program.";
        ID=44;
      };
    };
    {
      *** Package ***;
      Name="Extern";
      ID=45;
      Zugriff=2;
      Type=1;
      {
        *** Package ***;
        Name="System";
        ID=46;
        Zugriff=2;
        Type=1;
        {
          *** Package ***;
          Name="Windows";
          ID=47;
          Zugriff=2;
          Type=1;
          {
            *** Package ***;
            Name="Forms";
            ID=48;
            Zugriff=2;
            Type=1;
            {
              *** Klasse ***;
              Name="Form";
              ID=49;
              Datentyp="class";
              IsExtern=true;
              FileName="Form.cs";
              FileActiveLine=-1;
              HeaderFileActiveLine=-1;
              IsGenerate=true;
              Parent=-1;
            };
            {
              *** Diagramm ***;
              Name="Forms";
              ID=50;
            };
          };
          {
            *** Diagramm ***;
            Name="Windows";
            ID=51;
          };
        };
        {
          *** Diagramm ***;
          Name="System";
          ID=52;
        };
      };
    };
  };
};
